---
- include_role:
    name: common

# Set up big dipper
- name: "Install python dependencies"
  pip:
    name: psycopg2

- name: "Set up docker"
  inclide_role:
    name: docker

- name: Set up golang
  include_role:
    name: gantsign.golang
  vars:
    golang_version: 1.16.4

- name: Ensure user exists for gaiad
  user:
    name: "{{bigdipper_user}}"
    append: true
    groups: adm
    shell: /bin/bash
    comment: User for gaiad and cosmovisor services

- name: "Checkout BDJuno"
  git:
    repo: 'https://github.com/forbole/bdjuno.git'
    dest: {{bdjuno_dir}}
    version: cosmos/v0.44.x

- name: "Install postgres docker container"
  community.docker.docker_container:
    state: present
    name: big-dipper-postgres
    image: postgres
    ports:
      - "{{bigdipper_db_port}}:{{bigdipper_db_port}}"
    env:
      POSTGRES_PASSWORD: "{{bigdipper_db_password}}"

- name: Create postgres database
  community.postgresql.postgresql_db:
    name: "{{bigdipper_db}}"

- name: Create postgres schema
  community.postgresql.postgresql_schema:
    db: "{{bigdipper_db}}"
    name: "{{bigdipper_db_schema}}"

- name: "Configure users on postgres"
  community.postgresql.postgresql_user:
    db: "{{bigdipper_db}}"
    name: "{{bigdipper_db_user}}"
    password: "{{bigdipper_db_password}}"

# Loop through schemas one by one
- name: "Configure postgres schema"

- name: "Install BDJuno"
  shell: |
    cd {{bdjuno_dir}}
    make install
    bdjuno init --home {{bdjuno_home}}

# Copy config over from template?
- name: "Generate bdjuno config"
  template:
    src: bdjuno-config.yaml.j2
    dest: "{{bdjuno_home}}/config.yaml"

- name: "Parse genesis file with bdjuno"
  shell: bdjuno parse-genesis --home {{bdjuno_home}}

# TODO: Default to local node, expose config vars
- name: "Set up bdjuno systemd service"
  template:
    src: bdjuno.service.j2
    dest: "/etc/systemd/system/{{bdjuno_service_name}}.service"

- name: Restart journalctl so that the logs may flow
  systemd:
    state: restarted
    name: systemd-journald

- name: "Run bdjuno systemd service"
  when: not use_cosmovisor
  systemd:
    daemon_reload: true
    state: restarted
    name: "{{bdjuno_service_name}}"


- name: "Install hasuna"
# TODO: Use PG_DATABASE_URL to specify the database?
- name: "Set up hasuna CLI"
- name: "Apply metadata to hasura"
- name: "Set up hasura-actions systemd service"
- name: "Run hasura-actions service"

- name: "Set up node+npm"
- name: "Clone and checkout big-dipper-ui"
- name: "Create .env file for big-dipper-ui"
- name: "General config for big-dipper-ui"
- name: "Create systemd service for big-dipper-ui"
- name: "Run big-dipper-ui"
