---

name: Test Gaia Versions with Tinkered Mainnet Genesis
on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - closed
  push:
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '!examples/inventory-local.yml'
      - 'README.md'
jobs:
  generate-matrices:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Current working directory
        run: pwd

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests

      - name: Generate starting versions
        id: generate-start
        run: |
          start=$(tests/generate_version_matrix.py v6.0.4)
          echo $start
          echo ::set-output name=start_versions::$start
      - name: Generate upgrade versions
        id: generate-upgrade
        run: |
          upgrade=$(tests/generate_upgrade_matrix.py v6.0.4)
          echo $upgrade
          echo ::set-output name=upgrade_versions::$upgrade
    outputs:
      start_versions: ${{ steps.generate-start.outputs.start_versions }}
      upgrade_versions: ${{ steps.generate-upgrade.outputs.upgrade_versions }}

  test-start:
    runs-on: ubuntu-latest
    needs: generate-matrices
    strategy:
      matrix:
        ${{ fromJSON(needs.generate-matrices.outputs.start_versions) }}
    steps:
      - run: echo "Test ${{matrix.gaia_version}}"
      - name: Installing system utils
        run: apt install tree git-lfs
      - name: Check out hyphacoop/cosmos-genesis-tinkerer
        uses: actions/checkout@v3
        with:
          repository: hyphacoop/cosmos-genesis-tinkerer
          lfs: true
      - name: Check out hyphacoop/cosmos-ansible
        uses: actions/checkout@v3
        with:
          repository: hyphacoop/cosmos-ansible
      - name: Current working directory
        run: pwd
      - name: tree
        run: tree ~
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ansible toml

      - name: Configure ansible.cfg
        run: echo "transport = local" >> ansible.cfg
      - name: Configure inventory
        run: "sed -e 's/testnet.com:/local:/g ; /genesis_url:/d' examples/inventory-local-genesis.yml > inventory.yml"
      - name: Run playbook
        run: | 
          latest_genesis=$(ls -t ../cosmos-genesis-tinkerer/mainnet-genesis-tinkered/*v7* | tail -1)
          ansible-playbook gaia.yml -i inventory.yml --extra-vars "\
          reboot=false \
          enable_swap=true \
          swap_size=16384 \
          minimum_gas_prices=0.0025uatom \
          gaiad_version=${{ matrix.gaia_version }} \
          gaiad_home={{ gaiad_user_home }}/.gaia gaiad_gov_testing=true \
          gaiad_user=runner \
          priv_validator_key_file=examples/validator-keys/validator-40/priv_validator_key.json \
          node_key_file=examples/validator-keys/validator-40/node_key.json \
          genesis_file=$latest_genesis"
      - name: Check cosmovisor service
        run: systemctl status cosmovisor
      - name: Check blocks are being produced
        run: tests/test_block_production.sh 127.0.0.1 26657 10
      - name: Get RAM usage while gaiad is running
        run: free -m

  # test-upgrade:
  #   runs-on: ubuntu-latest
  #   needs: generate-matrices
  #   strategy:
  #     matrix:
  #       ${{ fromJSON(needs.generate-matrices.outputs.upgrade_versions) }}
  #   steps:
  #     # Get system info
  #     - run: ifconfig
  #     - run: arp -a
  #     - run: sudo dmidecode
  #     - run: df -h
  #     - run: free -m
  #     - run: uname -a
  #     - run: lsb_release -a
  #     - run: echo "GitHub branch is ${{ github.ref }}"
  #     - run: whoami
  #     - run: pwd

  #     - run: echo "Test upgrading ${{matrix.gaia_version}} to ${{matrix.upgrade_version}}"
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: '3.10'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install ansible toml

  #     - name: Configure ansible.cfg
  #       run: echo "transport = local" >> ansible.cfg
  #     - name: Configure inventory
  #       run: "sed 's/root@testnet.com:/local:/g' examples/inventory-local.yml > inventory.yml"
  #     - name: Run playbook
  #       run: ansible-playbook gaia.yml -i inventory.yml --extra-vars "reboot=false gaiad_version=${{ matrix.gaia_version }} gaiad_home={{ gaiad_user_home }}/.gaia gaiad_gov_testing=true gaiad_user=runner"
  #     - name: Check cosmovisor service
  #       run: systemctl status cosmovisor
  #     - name: Check blocks are being produced
  #       run: tests/test_block_production.sh 127.0.0.1 26657 10
  #     - name: Test software upgrade
  #       run: tests/test_software_upgrade.sh 127.0.0.1 26657 ${{ matrix.upgrade_version }}
